2017/11/06
1.
在使用STL库下String类型的strcpy与strcat时，需注意这两个方法不会检查字符串变量是否真的有足够大小来容纳被复制的字符串。一旦复制的字符串比其容量大，可能导致数组之外的内存位置被写入数据，改变了其他已声明变量的值。
在调试的时候，如果注意到某个变量由于不明的原因而改变了值，那么就应当考虑程序中所使用的字符串变量或其他数组。是否越界访问了字符串变量或数组？

2017/11/07
1.
const string BLANK(" ");	//在两个双引号之间有一个空格
对于需要使用空格的语句，就可以不直接使用空格，而是使用常量BLANK，这样就提供了语句的可读性。
2.
C++中，new操作符用于分配动态内存。delete操作符用于释放动态内存。
3.
当指针不指向任何节点时，使用空指针(NULL)。两种常见情况如下：
	(1)在链表最后一个节点的链接域中使用空指针。
	(2)当链表还没有包含任何节点时，使用空指针作为头指针和尾指针的值。这种链表就称为空链表(empty list)。
注：NULL是定义在库函数<cstdlib>中的一个常量(NULL并不是std名称空间的一部分。可以简单地写作NULL，无需加std::前缀)。
4.
节点构造函数
node(
	const value_type& init_data = value_type()，	//数据默认值由init_data = value_type();给定
	const node* init_link = NULL;
);

2017/11/10
1.
->操作符
	如果p是指向某个类的指针，m是该类的一个成员函数，那么，p->m等同于(*P).m。
	例如，head_ptr->data()就是调用data函数的语法，该函数指针head_ptr所指向的节点的成员函数。
2.
操作链表的函数
	操作链表的函数都具有一个或多个参数，这些参数是指向链表节点的指针。如果函数不准备修改链表，那么其参数就应为const node*类型。
	通常，这些函数应可以处理空链表（由头指针为空表示）。事实上，操作链表的函数之所以表示链表的成员函数，原因之一就是要求这些函数应具备处理空链表的能力（因为每个节点成员函数都必须是通过某个节点来调用的，而空链表没有节点）。
